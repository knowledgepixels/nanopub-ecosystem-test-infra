nameOverride: "new"

fullnameOverride: ""

enablerNodeSelector: {}

# Component application values
application:
  tier: external
  image:
    repository: docker.io/nanopub/query
    pullPolicy: IfNotPresent
    tag: "latest"
    # Overrides the image tag whose default is the chart appVersion.

  replicaCount: 1

  service:
    type: NodePort
    nodePort: ""
    port: 9292
    targetPort: 9292
    containerPort: 9292
    protocol: TCP

  metrics:
    type: NodePort
    nodePort: ""
    port: 9293
    targetPort: 9293
    containerPort: 9293
    protocol: TCP

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue


  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component application values
glrc:
  tier: external
  image:
    repository: docker.io/clariah/grlc
    pullPolicy: IfNotPresent
    tag: "v1.3.9"
    # Overrides the image tag whose default is the chart appVersion.

  replicaCount: 1

  service:
    type: NodePort
    nodePort: ""
    port: 9292
    targetPort: 9292
    containerPort: 9292
    protocol: TCP

  metrics:
    type: NodePort
    nodePort: ""
    port: 9293
    targetPort: 9293
    containerPort: 9293
    protocol: TCP

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    exampleEnvVar: exampleValue


  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component rdf4j values
rdf4j:
  tier: internal
  image:
    repository: docker.io/nanopub/rdf4j-workbench
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "5.1.3-SNAPSHOT"

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 8080
    targetPort: 8080
    containerPort: 8080
    protocol: TCP

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.

  persistence:
    mountPath: /var/rdf4j
    accessModes:
      - ReadWriteOnce
    size: 50Mi

  persistenceLogs:
    mountPath: /usr/local/tomcat/logs
    accessModes:
      - ReadWriteOnce
    size: 5Mi

  persistenceInfo:
    mountPath: /var/info
    accessModes:
      - ReadWriteOnce
    size: 5Mi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}