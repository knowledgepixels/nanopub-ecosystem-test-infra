apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "application.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "application.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "application.fullname" . }}-headless
  {{- if not .Values.application.autoscaling.enabled }}
  replicas: {{ .Values.application.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "application.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "application.labels" . | nindent 8 }}
    spec:
      {{- with .Values.application.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.global.nodeSelectorLabel }}
      nodeSelector:
          nodeSelectorLabel: {{ .Values.global.nodeSelectorLabel | quote }}
      {{- end }}
      {{- with .Values.application.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.application.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.application.podSecurityContext | nindent 8 }}
      containers:
        - name: application
          securityContext:
            {{- toYaml .Values.application.securityContext | nindent 12 }}
          image: "{{ .Values.application.image.repository }}:{{ .Values.application.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.application.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.application.service.containerPort }}
              protocol: {{ .Values.application.service.protocol }}
            - containerPort: {{ .Values.application.metrics.containerPort }}
              protocol: {{ .Values.application.metrics.protocol }}
          resources:
            {{- toYaml .Values.application.resources | nindent 12 }}
          env:
            - name: REGISTRY_DB_HOST
              value: {{ include "db.fullname" . }}
            - name: REGISTRY_TEST_INSTANCE
              value: "true"
            - name: REGISTRY_SERVICE_URL
              value: "http://{{ include "application.fullname" . }}:{{ .Values.application.service.port }}"
            - name: REGISTRY_PEER_URLS
              value: {{ .Values.application.registryPeerUrls | quote }}
          volumeMounts:
            - name: setting-trig
              mountPath: /data
              readOnly: true
      volumes:
        - name: setting-trig
          configMap:
            name: "setting-{{ include "application.fullname" . }}"